name: Semgrep Analysis

on:
  push:
    branches:
      - master
      - semgrep-test
  pull_request:
    branches:
      - master
      - semgrep-test

jobs:
  semgrep:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep
      - name: Run Semgrep
        run: semgrep --metrics off --config "p/owasp" --json > semgrep_report.json

      - name: Ensure Semgrep Report Exists
        run: test -f semgrep_report.json

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v2
        with:
          name: semgrep-results
          path: semgrep_report.json

      - name: Check Semgrep findings and create annotations
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('semgrep_report.json', 'utf8'));
            const annotations = report.results.map(result => ({
              path: result.path,
              start_line: result.start.line,
              end_line: result.end.line,
              annotation_level: 'warning',
              message: `${result.check_id}: ${result.extra.message}`,
            }));
            if (annotations.length > 0) {
              // Create a check run
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'Semgrep Analysis',
                head_sha: context.sha,
                status: 'completed',
                conclusion: 'neutral',
                output: {
                  title: 'Semgrep Analysis Results',
                  summary: `Found ${annotations.length} issue(s).`,
                  annotations: annotations.slice(0, 50), 
                },
              });
              // Fail the workflow
              throw new Error(`Semgrep found ${annotations.length} issue(s). Failing the workflow.`);
            } else {
              console.log('No issues found by Semgrep.');
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}